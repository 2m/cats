function z = measure2(x)
%calculates the bearings from the landm to the mouse and adds measurement
%noise
global landm;
global n;
global vc;
global k;
global nextr;

for i=1:nextr
    %use either acos or asin
    if (x(2,1)-landm(i,2)>=0) %needed because of ambiguity in acos (and asin)
        %can be simplified(?)
        z(i,1)=acos((x(1,1)-landm(i,1)) /...
            sqrt((x(1,1)-landm(i,1))^2 + (x(2,1)-landm(i,2))^2));
    else
        z(i,1)=2*pi-acos((x(1,1)-landm(i,1)) /...
            sqrt((x(1,1)-landm(i,1))^2 + (x(2,1)-landm(i,2))^2));
    end
    
    %Alternative: (somtimes less divergent, sometimes more)
    %z(i,1)=atan2(x(2,1)-landm(i,2),x(1,1)-landm(i,1));
    
    if i==n+1
        z(n+1,1)=norm(vc(:,k);
    end
    if i==n+2
        if (vc(2,k)>=0) %needed because of ambiguity in acos (and asin)
            z(n+2,1)=acos(vc(1,k)/...
                sqrt(vc(1,k)^2 + vc(2,k)^2));
        else
            z(n+2,1)=2*pi-acos(vc(1,k) /...
                sqrt(vc(1,k)^2 + vc(2,k)^2));
        end
    end
end
%z(n+1,1)=norm(vc(:,k);
%z(n+2,1)=0;
%if (vc(2,k)>=0) %needed because of ambiguity in acos (and asin)
%     z(n+2,1)=acos(vc(1,k)/...
%         sqrt(vc(1,k)^2 + vc(2,k)^2));
% else
%     z(n+2,1)=2*pi-acos(vc(1,k) /...
%         sqrt(vc(1,k)^2 + vc(2,k)^2));
% end