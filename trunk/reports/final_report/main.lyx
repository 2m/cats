#LyX 1.6.6.1 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass IEEEtran
\begin_preamble
\RequirePackage{colortbl, tabularx}
\@ifundefined{comment}{}% do nothing if the comment environment is not defined
  {% redefine the comment environment if it is defined
   \renewenvironment{comment}
    {% replaces \begin{comment}
     \par\medskip\noindent
     \tabularx{\columnwidth}{|>{\columncolor[gray]{0.9}}X|}
     \hline
     \emph{\textbf{Comment:}}% You can use any other text instead of "Comment:" or leave it
    }
    {% replaces \end{comment}
     \endtabularx\hrule\par\medskip
    }
  }%
\end_preamble
\use_default_options false
\language english
\inputencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
C.A.T.S.: Cooperative Autonomous Tracking System
\end_layout

\begin_layout Author
Fredrik Wahlberg, Christian Ålander, Nils Törnblom, Martynas Mickevičius,
 Edvard Zak, Cheewin Pisanupoj
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Cooperative Autonomous Tracking System
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
This report describes the work of implementing a team of robots which cooperativ
ely tracks a non-cooperative target using bearings-only measurements.
 Robots collect data using low resolution cameras and odometers mounted
 inside the wheel motors.
 The collected data is then processed and used for robot positioning and
 target tracking.
\end_layout

\begin_layout Abstract
We have chosen to implement two target tracking filters – an Unscented Kalman
 filter as well as a particle filter.
 Both filters were developed side by side to compare the implementation
 of the differing mathematical models in the embedded device.
\end_layout

\begin_layout Abstract
Tracking can only be done successfully if robots know their own position.
 With a known starting position, the current position of the robot can be
 calculated using odometer readings.
 Unfortunately, the errors in those readings will be integrated over time,
 resulting in a position error steadily increasing over time.
 This problem was by using a set of landmarks standing at known positions.
 By making bearings measurements to the landmarks, the accumulated error
 in the position of the robots can be corrected.
 
\end_layout

\begin_layout Keywords
Bearings-only Tracking, Particle Filter, Unscented Kalman Filter, Robot
 Platform, Embedded platform
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "introduction.lyx"

\end_inset


\end_layout

\begin_layout Section
Previous Work
\end_layout

\begin_layout Standard
Since its published formulation in 1960, the Kalman filter has been a widely
 used method for estimating the true states of a linear dynamical system
 from a series of noisy measurements.
 For linear systems with a Gaussian noise distribution, the Kalman filter
 is the optimal method to compute the state estimates.
 Non-linear state models cannot be used directly in the standard Kalman
 filter.
 One way to circumvent this is to linearize the model, which is done in
 the Extended Kalman filter (EKF).
 The EKF has long been the de facto standard in nonlinear state estimation
 
\begin_inset CommandInset citation
LatexCommand cite
key "EKF"

\end_inset

.
 The approximation done in the linearization can give significant errors
 for highly non-linear systems though.
 An improvement of the EKF is the Unscented Kalman filter (UKF), introduced
 in 1997 by Simon J.
 Julier and Jerrey K.
 Uhlmann 
\begin_inset CommandInset citation
LatexCommand cite
key "Julier97anew"

\end_inset

.
 It is based on the unscented transform, which works by propagating a minimal
 set of sampling points through the non-linear functions.
 From this, the estimated mean and covariance of the state variables are
 then recovered.
 Just like in the EKF, the UKF uses approximations of the non-linear state
 model, but the errors that arise from them are smaller 
\begin_inset CommandInset citation
LatexCommand cite
key "UKF"

\end_inset

.
 Where the EKF captures the mean and the covariance accurately to the first
 order (Taylor series expansion), the approximations of the UKF are accurate
 to the third order (assuming Gaussian random variable) 
\begin_inset CommandInset citation
LatexCommand cite
key "Wan00theunscented"

\end_inset

.
 Moreover, the EKF requires the derivation of the Jacobian matrices which
 can be difficult to find.
 The UKF does not use the Jacobian 
\begin_inset CommandInset citation
LatexCommand cite
key "Julier97anew"

\end_inset

.
 It has also been shown that the UKF consistently achieves a better level
 of accuracy than the EKF at a comparable level of complexity 
\begin_inset CommandInset citation
LatexCommand cite
key "Wan00theunscented"

\end_inset

.
\end_layout

\begin_layout Standard
Particle filters are a common approach in non-linear tracking and been proven
 effective for robot localization 
\begin_inset CommandInset citation
LatexCommand cite
key "ISI:000222055900012,MiodragBolic2004-11-12,Rekleitis"

\end_inset

.
 It is a model estimation technique based on simulation.
 With a sufficient number of samples (particles), the particle filters approach
 the Bayesian optimal estimate, so they can be made more accurate than Kalman
 filter variants 
\begin_inset CommandInset citation
LatexCommand cite
key "Particle"

\end_inset

.
 It is a computationally heavy technique and hence there would have to be
 a lot of work doing optimizations.
 The target platform was quite limited in computational power, but since
 we also would try the Kalman filter, which is a standard technique, it
 was decided that there would be enough time to test both.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "alternative_solutions2.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "kalman_filter_theory.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "particle_filter_theory.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "geometric_theory.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "guide_theory.lyx"

\end_inset


\end_layout

\begin_layout Section
implementation
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "overview_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "cat_design_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "camera_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "landmarks_implementation_new.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "cat_movement_regulator_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "network_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "network_architecture_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "kalman_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "particle_filter_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "geometric_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "guide_implementation.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "gui.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "GSim_implementation.lyx"

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "tracking_results.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "positioning_results.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
preview true
filename "guide_results.lyx"

\end_inset


\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
I (Edvard) never conducted any test on the Java implementation as I thought
 we agreed that there was no point of doing that as it wasn't fully optimized.
\end_layout

\end_inset


\end_layout

\begin_layout Section
future work
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Should we discuss the results in more detail? E.g.
 compare kalman and particle?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this project we completed our goal of tracking a moving target using
 an autonomous team of mobile robots, allowed to take bearings-only measurements.
 All of the included subsystems are working on the designated Lego® Mindstorms®
 NXT platform.
 Some of the subsystems needs more work to achieve a good overall tracking
 performance.
 Primarily, the guide system should be considered a proof of concept.
 A faster computation time of the guide would make the cats’ movement much
 more responsive and better adopted to tracking a fast target.
 This should also allow us to drop the time slotted movement as well, without
 risking collisions between the cats.
\end_layout

\begin_layout Standard
Secondly, the filters can be improved substantially by decreasing their
 computation time.
 When tracking the target during a limited time period, the tracking filters
 limit the overall performance to the greatest extent.
 The computation time of both the particle filter and the UKF can be reduced,
 allowing better tracking performance.
 Especially the UKF should be possible optimize greatly, given its relatively
 low computational complexity.
 In particular, the brick implementation can be improved by switching to
 a faster matrix class library to reduce the iteration time.
 One could switch to using single point arithmetic instead of double, as
 the former has more than enough of accuracy for our application anyway.
 Even an integer point solution could be adopted, as was done with the particle
 filter.
 That could probably have made the iteration time a lot faster.
 Ultimately, the network iteration frequency puts a limit on how much increase
 in overall system performance we can expect by reducing the filter iteration
 times.
 But since each network cycle took __ ms, there is quite a large room for
 improvement.
\begin_inset Note Comment
status open

\begin_layout Plain Layout
How long was it?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The UKF can be used in conjunction with the particle filter to improve its
 performance.
 This was demonstrated by 
\emph on
Yong Rui
\emph default
 and 
\emph on
Yunqiang
\emph default
 
\emph on
Chen
\emph default
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "Rui01betterproposal"

\end_inset

.
 By using the UKF for proposal distribution, the generated particles are
 placed closer to the true states.
 The increased accuracy can also be traded for a faster iteration time by
 using fewer particles.
 This should be an interesting and quite straightforward continuation of
 our work with the filters.
\end_layout

\begin_layout Standard
During longer tracking periods the absolute positioning filter becomes more
 important.
 A working UKF or particle filter of this kind should improve the performance
 greatly.
 With the used landmark positions, each cat should have landmark in its
 field of view at all times while tracking the mouse.
 This is assuming the mouse does not travel too close to the edges of the
 arena, and that the mouse does not occlude the landmarks.
 It should be possible to minimize these cases by adding appropriate terms
 to the criterion function of the guide.
 Under these circumstances, a well implemented absolute positioning filter
 should be able to position the cats accurately at all times, even given
 a large error in the odometer readings.
 Ideally, the filter should be able to correct the cats’ position and orientatio
n while they are moving.
 This was achieved in the Matlab filter simulations, so a brick implementation
 with this feature should be within the realm of possibility.
\end_layout

\begin_layout Standard
An interesting possibility is to enable feedback from the tracking filter
 to the absolute positioning filter.
 When three or more cats are tracking the mouse the conformity of their
 bearing readings is likely to vary with the accuracy of their estimated
 position.
 The covariance matrix of the estimated taget position can be used to measure
 this conformity.
 If the conformity becomes too low, the cats should improve their own position
 estimate, e.g.
 by sweeping for landmarks, thus enabling on-demand absolute positioning.
 This can be extended when four (or more) cats are used.
 By examining the conformity of all the different subsets containing three
 cats, it should be possible isolate a cat that has bad absolute position
 estimate (assuming the others are accurate).
 This is similar to cross-validation in statistics.
\end_layout

\begin_layout Standard
Another way of improving the tracking performance is by using better and/or
 more sensors than the ones we had access to.
 The camera we used had a very low resolution, making long range target
 detection difficult.
 Also, using predetermined color ranges to detect the target and the landmarks
 has its limitations – it becomes very sensitive to changes in the surrounding
 scene and the ambient lightning.
 An alternative could be to use patterns instead of colored lights as beacons.
 This would however be computationally more complex and probably require
 a higher resolution camera.
 
\end_layout

\begin_layout Standard
What could be interesting is to replace the camera totally with something
 else, for example an IR-detection module, and use different IR-codes (i.e.
 blinking in different speeds) as beacons.
 Another suggestion could be to use an ultra sonic sensor to detect object
 close to the brick for localization of the other cats and mouse.
 Some improvements to the absolute positioning filter could possibly be
 achieved by adding data from a compass.
 Regarding the movement pilot, it could be interesting to achieve arc-movement
 for the robot implemented with the guidance system.
 This could result in smoother movement, but would ideally require Ackermann’s
 steering correction, to avoid wheel slip and incorrect odometer readings
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ackermann"

\end_inset

.
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Original formulation seemed slightly exaggerated
\end_layout

\end_inset

 Unfortunately, such a construction would be hard to build with Lego.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "references"
options "bibtotoc,plain"

\end_inset


\end_layout

\begin_layout Section
Biography
\end_layout

\begin_layout Standard
\noindent

\series bold
Fredrik Wahlberg
\series default
 
\end_layout

\begin_layout Standard
\noindent
Project leader.
 Worked on the Particle filter (both tracking and positioning) and Geometric
 “filter” theory, simulation and implementation.
 Participated in software architecture and design.
 Wrote most of the Java simulation framework and the AI for robot positioning
 (maximizing sensor reading information and collision avoidance).
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Christian Ålander
\series default
 
\end_layout

\begin_layout Standard
\noindent
All about you and the what your interests are.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Nils Törnblom
\series default
 
\end_layout

\begin_layout Standard
\noindent
Worked on the Kalman filters; modelling, simulation and implementation.
 Also the person charge of the movement pilot regulator, camera tracking
 regulator, landmark design and detection.
 Involved in some of the robot design and construction.
 Co-developed the color coding.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Martynas Mickevičius
\series default
 
\end_layout

\begin_layout Standard
\noindent
Network communications implementation.
 Robot and GUI software architecture design.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Edvard Zak 
\end_layout

\begin_layout Standard
\noindent
Worked on the Unscented Kalman filters for tracking and positioning, mainly
 the Java implementation and its testing.
 Active in robot software architecture and design.
 Worked on the final testing.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Cheewin Pisanupoj
\series default
 
\end_layout

\begin_layout Standard
\noindent
All about you and the what your interests are.
 
\end_layout

\end_body
\end_document
