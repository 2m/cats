#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass IEEEtran
\use_default_options false
\language english
\inputencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Subsection
Particle filter
\end_layout

\begin_layout Standard
The basic principle of a particle filter is to by a particle optimization
 technique filter noisy data.
\end_layout

\begin_layout Standard
The main advantages to particle filters is that they can handle non-linearity's
 without compromising on accuracy
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
citation needed
\end_layout

\end_inset

.
 Basically 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Baysian recursive method
\end_layout

\begin_layout Plain Layout
General priciple
\end_layout

\begin_layout Plain Layout
Application to tracking
\end_layout

\begin_layout Plain Layout
Application to positioning
\end_layout

\begin_layout Plain Layout
Check references
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Random hypotheses about the states in the tracked object (within a given
 possible interval), visualized as particles 
\end_layout

\begin_layout Enumerate
Update particles (integration or similar) according to the estimated objects
 dynamics
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
show how
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Compare the states of each particle with sensor data and give each particle
 a weight indicating how well it conforms to it.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
show how
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Calculate a weighted mean or similar method to get the estimated states
 of the tracked object
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
show how
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
If needed, re-sample the particles based on the estimation of the tracked
 object (i.e.
 change the estimated PDF information contained in the particle swarm).
\end_layout

\begin_layout Enumerate
GOTO 2
\end_layout

\begin_layout Standard
In our specific case there was a need for two particle filters.
 One for tracking and one for positioning of the tracking robot.
 Also since we did not have to take height of a target into account (i.e.
 the arena for tracking was flat), all filters needed only to take the two
 dimensional case into account.
\end_layout

\begin_layout Standard
The tracking filter needed to estimate the position of the tracked object
 and, if possible, its speed.
 A natural choice for state variables was then the position in the x and
 y direction and velocity in the x and y direction.
\end_layout

\begin_layout Standard
For the positioning particle filter the states were chosen as x, y and heading
 angle.
 The camera, mounted on top of the robot, would sweep for targets, giving
 angles in a local reference system.
 These sightings could then be compared to the known positions of landmarks
 and how well a particles states would conform to this data.
\end_layout

\begin_layout Standard
A Gaussian model was chosen
\end_layout

\begin_layout Subsubsection
Simulation
\end_layout

\begin_layout Standard
The tracking filter worked very well in simulation and did even estimate
 the speed quite correctly.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:particle_sim_tracking"

\end_inset

Plot from the simulation of the tracking particle filter
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The positioning filter worked very well in simulation even though it, at
 most, could only see two landmarks at a time.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:particle_sim_pos"

\end_inset

Plot from the simulation of the positioning particle filter
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The good results from the simulation was a good indication that this filtering
 technique was a feasible solution.
 It was clear though that some optimization would be needed for the filtering
 technique to work on our desired platform.
\end_layout

\end_body
\end_document
